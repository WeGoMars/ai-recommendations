# 📘 MARS AI 추천 시스템 설계 문서

## 🧭 목표
Flask API로부터 전달받은 사용자 포트폴리오 및 시장 정보를 기반으로, 전략 기반의 종목 추천을 수행하고 그 결과를 JSON 응답 형태로 반환한다.

---

## 🏗️ 파이프라인 구조

### 1. `parser`
- **역할**: Flask에서 받은 요청 JSON을 사람이 해석 가능한 문서 형태로 요약 정리한다.
- **입력**: `RecommendationRequest`
- **출력**: 분석용 요청서 (Dict 또는 Markdown 등)
- **LLM 사용 여부**: ❌ (비사용)

### 2. `strategist`
- **역할**: 사전 정의된 6개의 전략 중, 요청서에 가장 적합한 3개 전략을 선택한다.
- **입력**: 요청서
- **출력**: 선택된 전략 3개
- **LLM 사용 여부**: ✅ (전략 선택에 사용)

### 3. `analyst`
- **역할**: 각 전략별 지표에 따라 주식 종목을 DB에서 질의하고 점수를 매겨 상위 종목을 추출한다.
- **입력**: 전략 리스트
- **출력**: 점수화된 추천 종목 (최대 4개)
- **LLM 사용 여부**: ❌ (비사용)

### 4. `commenter`
- **역할**: 종목별로 전략, 지표, 코멘트를 포함한 추천 이유를 생성하여 최종 응답 형식으로 가공한다.
- **입력**: 종목 리스트 + 전략/지표 정보
- **출력**: `RecommendationResponse`
- **LLM 사용 여부**: ✅ (자연어 설명 생성에 사용)

---

## 🧱 응답 포맷 예시

```json
{
  "recommended": [
    {
      "symbol": "AAPL",
      "name": "Apple Inc.",
      "sector": "Technology",
      "industry": "Consumer Electronics",
      "score": 85.0,
      "reasons": [
        {
          "type": "strategy",
          "detail": "성장 안정성 전략과 부합",
          "score": 28
        },
        {
          "type": "metric",
          "detail": "ROE 18%, 부채비율 60%",
          "score": 27
        },
        {
          "type": "commentary",
          "detail": "안정적 실적과 배당 성향으로 인한 우량주 평가",
          "score": 30
        }
      ]
    }
  ]
}
```

---

## 📌 전략 목록 (`InvestmentStrategy`)

| 전략 enum 값 | 전략 이름 | 간단 설명 |
|---------------|------------|------------|
| `dividend_stability` | 배당 안정 전략 | 배당률과 안정적 현금흐름을 가진 종목 선호 |
| `portfolio_balance` | 포트폴리오 균형 전략 | 섹터 및 자산 구성 균형을 중시 |
| `value_stability` | 가치 안정 전략 | 저평가 우량주 기반 장기 안정성 추구 |
| `momentum` | 모멘텀 전략 | 최근 상승세가 강한 종목 중심의 추세 투자 |
| `sector_rotation` | 섹터 로테이션 전략 | 시장 주도 섹터 순환에 따라 포지션 이동 |
| `rebound_buy` | 낙폭과대 반등 전략 | 단기 하락 후 반등 가능성이 큰 종목 선별 |

---

## 🛠️ 향후 구현 우선순위
1. `parser` 요청서 변환기 생성
2. 전략 enum 기반 상세 전략 설명 정의 (`strategies.ts` 또는 `strategies.yaml`)
3. `strategist` LLM 프롬프트 템플릿 구축
4. `analyst` 쿼리 템플릿 구현 및 샘플 DB 구성
5. `commenter` 자연어 템플릿 정의 및 LLM 연동

---
